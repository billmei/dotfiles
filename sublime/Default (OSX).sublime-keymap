[
	{
		"keys": ["ctrl+shift+1"],
		"command": "set_layout",
		"args":
		{
			"cols": [0.0, 1.0],
			"rows": [0.0, 1.0],
			"cells": [[0, 0, 1, 1]]
		}
	},
	{
		"keys": ["ctrl+shift+2"],
		"command": "set_layout",
		"args":
		{
			"cols": [0.0, 0.5, 1.0],
			"rows": [0.0, 1.0],
			"cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
		}
	},
	{
		"keys": ["ctrl+shift+3"],
		"command": "set_layout",
		"args":
		{
			"cols": [0.0, 0.33, 0.66, 1.0],
			"rows": [0.0, 1.0],
			"cells": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]]
		}
	},
	{
		"keys": ["ctrl+shift+4"],
		"command": "set_layout",
		"args":
		{
			"cols": [0.0, 0.5, 1.0],
			"rows": [0.0, 0.5, 1.0],
			"cells":
			[
				[0, 0, 1, 1], [1, 0, 2, 1], [0, 1, 2, 2]
			]
		}
	},
	{
		"keys": ["ctrl+shift+5"],
		"command": "set_layout",
		"args":
		{
			"cols": [0.0, 0.5, 1.0],
			"rows": [0.0, 0.5, 1.0],
			"cells":
			[
				[0, 0, 1, 1], [1, 0, 2, 1],
				[0, 1, 1, 2], [1, 1, 2, 2]
			]
		}
	},
	// Auto-pair backticks
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "[`a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
			{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
			{ "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
		]
	},

	{ "keys": ["super+g"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },
	{ "keys": ["super+pageup"], "command": "prev_view" },
	{ "keys": ["super+pagedown"], "command": "next_view" },
	{ "keys": ["alt+up"], "command": "move", "args": {"by": "lines", "forward": false} },
	{ "keys": ["alt+down"], "command": "move", "args": {"by": "lines", "forward": true} },
	{ "keys": ["alt+backspace"], "command": "delete_word", "args": { "forward": false, "sub_words": true } },
	{ "keys": ["alt+delete"], "command": "delete_word", "args": { "forward": true, "sub_words": true } },
	{ "keys": ["super+left"], "command": "move_to", "args": {"to": "bol", "extend": false} },
	{ "keys": ["super+right"], "command": "move_to", "args": {"to": "eol", "extend": false} },

	{ "keys": ["super+shift+r"], "command": "reveal_in_side_bar"},
	{ "keys": ["super+i"], "command": "copy_path"},

	{ "keys": ["super+shift+k"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Line.sublime-macro"} },


	// Autocomplete JSX in Emmet
	{"keys": ["tab"], "command": "expand_abbreviation_by_tab", "context":
		[
			{ "operand": "source.js", "operator": "equal", "match_all": true, "key": "selector" },
			{ "match_all": true, "key": "selection_empty" },
			{ "operator": "equal", "operand": false, "match_all": true, "key": "has_next_field" },
			{ "operand": false, "operator": "equal", "match_all": true, "key": "auto_complete_visible" },
			{ "match_all": true, "key": "is_abbreviation" }
		]
	}

]
